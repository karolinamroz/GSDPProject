[{"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\index.js":"1","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\App.js":"3","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\sessions-list.components.js":"4","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\session.components.js":"5","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\add-session.components.js":"6","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\services\\session.service.js":"7","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\http-common.js":"8","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\edit-session.components.js":"9","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\services\\participants.service.js":"10","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\add-participant.components.js":"11","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\login.components.js":"12","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\participants-list.components.js":"13","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\participants.components.js":"14","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\sign-up.components.js":"15","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\edit-participants.components.js":"16"},{"size":333,"mtime":1610549510252,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":3414,"mtime":1613732646287,"results":"20","hashOfConfig":"18"},{"size":6489,"mtime":1613732599055,"results":"21","hashOfConfig":"18"},{"size":10073,"mtime":1613733724491,"results":"22","hashOfConfig":"18"},{"size":6229,"mtime":1613644455141,"results":"23","hashOfConfig":"18"},{"size":720,"mtime":1613692044151,"results":"24","hashOfConfig":"18"},{"size":174,"mtime":1610645155035,"results":"25","hashOfConfig":"18"},{"size":6490,"mtime":1613381764055,"results":"26","hashOfConfig":"18"},{"size":668,"mtime":1613651309076,"results":"27","hashOfConfig":"18"},{"size":5055,"mtime":1613650151371,"results":"28","hashOfConfig":"18"},{"size":2516,"mtime":1613575709975,"results":"29","hashOfConfig":"18"},{"size":5461,"mtime":1613655763066,"results":"30","hashOfConfig":"18"},{"size":7953,"mtime":1613658815626,"results":"31","hashOfConfig":"18"},{"size":5385,"mtime":1613655230545,"results":"32","hashOfConfig":"18"},{"size":6156,"mtime":1613646827521,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"63omdm",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\index.js",[],["72","73"],"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\App.js",[],"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\sessions-list.components.js",[],"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\session.components.js",[],"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\add-session.components.js",[],"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\services\\session.service.js",[],"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\http-common.js",[],["74","75"],"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\edit-session.components.js",[],"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\services\\participants.service.js",[],"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\add-participant.components.js",[],"C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\login.components.js",["76"],"import React, { Component } from \"react\";\r\nimport ParticipantDataService from \"../services/participants.service\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            email: \"\",\r\n            password: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n              <img\r\n                src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                alt=\"profile-img\"\r\n                className=\"profile-img-card\"\r\n              />\r\n    \r\n              <Form>\r\n                  <div>\r\n    \r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeEmail}\r\n                      />\r\n                    </div>\r\n    \r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                      />\r\n                    </div>\r\n    \r\n                    <div className=\"form-group\">\r\n                      <button className=\"btn btn-primary btn-block\">Log In</button>\r\n                    </div>\r\n                  </div>\r\n    \r\n                <CheckButton\r\n                  style={{ display: \"none\" }}\r\n                  onClick={this.saveParticipant} //no\r\n                />\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\participants-list.components.js",["77"],"import React, { Component } from \"react\";\r\nimport ParticipantsDataService from \"../services/participants.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ParticipantsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeSearchName = this.onChangeSearchName.bind(this);\r\n        this.retrieveParticipants = this.retrieveParticipants.bind(this);\r\n        this.refreshList = this.refreshList.bind(this);\r\n        this.setActiveParticipant = this.setActiveParticipant.bind(this);\r\n        this.removeAllParticipants = this.removeAllParticipants.bind(this);\r\n        this.searchName = this.searchName.bind(this);\r\n\r\n        this.state = {\r\n            participants: [],\r\n            currentParticipant: null,\r\n            currentIndex: -1,\r\n            searchName: \"\"\r\n        };\r\n    }\r\n    \r\n    \r\n    componentDidMount() {\r\n        this.retrieveParticipants();\r\n    }\r\n    \r\n\r\n    onChangeSearchName(e) {\r\n        const searchName = e.target.value;\r\n\r\n        this.setState({\r\n            searchName: searchName\r\n        });\r\n    }\r\n\r\n    retrieveParticipants() {\r\n        ParticipantsDataService.getAll()\r\n        .then(response => {\r\n            this.setState({\r\n                participants: response.data\r\n            });\r\n            console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    refreshList() {\r\n        this.retrieveParticipants();\r\n        this.setState({\r\n            currentParticipant: null,\r\n            currentIndex: -1\r\n        });\r\n    }\r\n\r\n    setActiveParticipant(participant, index) {\r\n        this.setState({\r\n            currentParticipant: participant,\r\n            currentIndex: index\r\n        });\r\n    }\r\n\r\n    removeAllParticipants() {\r\n        ParticipantsDataService.deleteAll()\r\n        .then(response => {\r\n            console.log(response.data);\r\n            this.refreshList();\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    searchName() {\r\n        this.setState({\r\n            currentName: null,\r\n            currentIndex: -1\r\n        });\r\n\r\n        ParticipantsDataService.findByName(this.state.searchName)\r\n        .then(response => {\r\n            this.setState({\r\n                participants: response.data\r\n            });\r\n            console.log(response.data);\r\n        })\r\n        .catch (e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { searchName, participants, currentParticipant, currentIndex } = this.state;\r\n\r\n        return (\r\n            <div className=\"list row\">\r\n              <div className=\"col-md-8\">\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search by Name\"\r\n                    value={searchName}\r\n                    onChange={this.onChangeSearchName}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button\r\n                      className=\"btn btn-outline-secondary\"\r\n                      type=\"button\"\r\n                      onClick={this.searchName}\r\n                    >\r\n                      Search\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <h4>Participants List</h4>\r\n      \r\n                <ul className=\"list-group\">\r\n                  {participants &&\r\n                    participants.map((participant, index) => (\r\n                      <li\r\n                        className={\r\n                          \"list-group-item \" +\r\n                          (index === currentIndex ? \"active\" : \"\")\r\n                        }\r\n                        onClick={() => this.setActiveParticipant(participant, index)}\r\n                        key={index}\r\n                      >\r\n                        {participant.name}\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n      \r\n                <button\r\n                  className=\"m-3 btn btn-sm btn-danger\"\r\n                  onClick={this.removeAllParticipants}\r\n                >\r\n                  Remove All\r\n                </button>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                {currentParticipant ? (\r\n                  <div>\r\n                    <h4>Participant</h4>\r\n                    <div>\r\n                      <label>\r\n                        <strong>Name:</strong>\r\n                      </label>{\" \"}\r\n                      {currentParticipant.name}\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <strong>Email:</strong>\r\n                      </label>{\" \"}\r\n                      {currentParticipant.email}\r\n                    </div>\r\n                    <div>\r\n                      <label>\r\n                        <strong>Phone:</strong>\r\n                      </label>{\" \"}\r\n                      {currentParticipant.phone}\r\n                    </div>\r\n\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <br />\r\n                    <p>Please click on a Participant</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n            </div>\r\n        );\r\n    \r\n    }\r\n}","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\participants.components.js",["78"],"import React, { Component } from \"react\";\r\nimport ParticipantsDataService from \"../services/participants.service\";\r\n\r\nexport default class Participant extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePhone = this.onChangePhone.bind(this);\r\n        this.onChangeRole = this.onChangeRole.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.getParticipant = this.getParticipant.bind(this);\r\n        this.updateParticipant = this.updateParticipant.bind(this);\r\n        this.deleteParticipant = this.deleteParticipant.bind(this);\r\n\r\n        this.state = {\r\n          id: null,\r\n          name: \"\",\r\n          email: \"\",\r\n          phone: \"\",\r\n          role: \"\",\r\n          password: \"\",\r\n\r\n          done: false\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getParticipant(this.props.match.params.id);\r\n    }\r\n\r\n  onChangeName(e) {\r\n    const name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n        return {\r\n            currentParticipant: {\r\n                ...prevState.currentParticipant,\r\n                name: name\r\n            }\r\n        };\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const email = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n        return {\r\n            currentParticipant: {\r\n                ...prevState.currentParticipant,\r\n                email: email\r\n            }\r\n        };\r\n    });\r\n  }\r\n\r\n   onChangePhone(e) {\r\n   const phone = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n          currentParticipant: {\r\n              ...prevState.currentParticipant,\r\n              phone: phone\r\n            }\r\n       };\r\n    });\r\n  }\r\n\r\n  onChangeRole(e) {\r\n    const role = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n        return {\r\n            currentParticipant: {\r\n                ...prevState.currentParticipant,\r\n                role: role\r\n            }\r\n        };\r\n    });\r\n  } \r\n\r\n  onChangePassword(e) {\r\n    const password = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n        return {\r\n            currentPassword: {\r\n                ...prevState.currentParticipant,\r\n                password: password\r\n            }\r\n        };\r\n    });\r\n  }\r\n\r\n    saveParticipant() {\r\n        var data = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            phone: this.state.phone,\r\n            role: this.state.role,\r\n            password: this.state.password\r\n        };\r\n\r\n        ParticipantsDataService.create(data)\r\n        .then(response => {\r\n            this.setState({\r\n                id: response.data.id,\r\n                name: response.data.name,\r\n                email: response.data.email,\r\n                phone: response.data.phone,\r\n                role: response.data.role,\r\n                password: response.data.password,\r\n\r\n                submitted: true\r\n            });\r\n            console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    getParticipant(id) {\r\n      ParticipantsDataService.get(id)\r\n      .then(response => {\r\n          this.setState({\r\n              currentParticipant: response.data\r\n          });\r\n          console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n      });\r\n  }\r\n\r\n    newParticipant() {\r\n        this.setState = ({\r\n            id: null,\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            role: \"\",\r\n            password: \"\",\r\n\r\n            submitted: false\r\n        });\r\n    }\r\n\r\n    updateParticipant() {\r\n      ParticipantsDataService.update(\r\n          this.state.currentParticipant.id,\r\n          this.state.currentParticipant\r\n      )\r\n      .then(response => {\r\n          console.log(response.data);\r\n          this.setState({\r\n              message: \"Participan's details have been updated successfully.\"\r\n          });\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteParticipant() {\r\n      ParticipantsDataService.delete(this.state.currentParticipant.id)\r\n      .then(response => {\r\n          console.log(response.data);\r\n          this.props.history.push('/participants')\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n      });\r\n  }\r\n\r\n    render() {\r\n      const {currentParticipant} = this.state;\r\n        return (\r\n          <div className=\"submit-form\">\r\n            {this.state.submitted ? (\r\n              <div>\r\n                <h4>You signed-up successfully!</h4>\r\n                <button className=\"btn btn-success\" onClick={this.newSession}>\r\n                  Add\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"name\"\r\n                    required\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    name=\"name\"\r\n                  />\r\n                </div>\r\n    \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    required\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    name=\"email\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"phone\">Phone</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"phone\"\r\n                    required\r\n                    value={this.state.phone}\r\n                    onChange={this.onChangePhone}\r\n                    name=\"phone\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"role\">Role</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"role\"\r\n                    required\r\n                    value={this.state.role}\r\n                    onChange={this.onChangeRole}\r\n                    name=\"role\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    required\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    name=\"password\"\r\n                  />\r\n                </div>\r\n\r\n                <button\r\n                        className=\"badge badge-danger mr-2\"\r\n                        onClick={this.deleteParticipant}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n\r\n                        <button\r\n                        type=\"submit\"\r\n                        className=\"badge badge-success\"\r\n                        onClick={this.updateParticipant}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                        \r\n                    \r\n                <button onClick={this.saveParticipant} className=\"btn btn-success\">\r\n                  Submit \r\n                </button>\r\n                \r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n\r\n}","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\sign-up.components.js",["79"],"import React, { Component } from \"react\";\r\nimport ParticipantDataService from \"../services/participants.service\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class AddParticipant extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePhone = this.onChangePhone.bind(this);\r\n        this.onChangeRole = this.onChangeRole.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            role: \"\",\r\n            password: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePhone(e) {\r\n        this.setState({\r\n            phone: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeRole(e) {\r\n        this.setState({\r\n            role: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    saveParticipant() {\r\n        var data = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            phone: this.state.phone,\r\n            role: this.state.role,\r\n            password: this.state.password\r\n        };\r\n\r\n        ParticipantDataService.create(data)\r\n        .then(response => {\r\n            this.setState({\r\n                id: response.data.id,\r\n                name: response.data.name,\r\n                email: response.data.email,\r\n                phone: response.data.phone,\r\n                role: response.data.role,\r\n                password: response.data.password\r\n            });\r\n            console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    newParticipant() {\r\n        this.setState = ({\r\n            id: null,\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            role: \"\",\r\n            password: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n              <img\r\n                src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                alt=\"profile-img\"\r\n                className=\"profile-img-card\"\r\n              />\r\n    \r\n              <Form>\r\n                  <div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"username\">Name</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"username\"\r\n                        value={this.state.name}\r\n                        onChange={this.onChangeName}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"phone\">Phone</label>\r\n                      <Input\r\n                        type=\"phone\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        value={this.state.phone}\r\n                        onChange={this.onChangePhone}\r\n                      />\r\n                    </div>\r\n    \r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeEmail}\r\n                      />\r\n                    </div>\r\n    \r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"role\">Role</label>\r\n                      <Input\r\n                        type=\"role\"\r\n                        className=\"form-control\"\r\n                        name=\"role\"\r\n                        value={this.state.role}\r\n                        onChange={this.onChangeRole}\r\n                      />\r\n                    </div>\r\n    \r\n                    <div className=\"form-group\">\r\n                      <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                    </div>\r\n                  </div>\r\n    \r\n                <CheckButton\r\n                  style={{ display: \"none\" }}\r\n                  onClick={this.saveParticipant}\r\n                />\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}","C:\\Users\\User\\desktop\\university\\gsdp\\scrum\\frontend\\src\\components\\edit-participants.components.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":30},{"ruleId":"86","severity":1,"message":"90","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":14},{"ruleId":"86","severity":1,"message":"91","line":179,"column":14,"nodeType":"88","messageId":"89","endLine":179,"endColumn":32},{"ruleId":"86","severity":1,"message":"90","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":14},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],["92"],["93"],"no-unused-vars","'ParticipantDataService' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'currentParticipant' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]